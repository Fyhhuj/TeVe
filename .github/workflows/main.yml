# اسم سير العمل الذي سيظهر في GitHub Actions
name: Flutter APK Build

# تحديد متى سيتم تشغيل سير العمل هذا
on:
  # تشغيل سير العمل عند دفع (push) التغييرات إلى فرع 'main'
  push:
    branches:
      - main
  # تشغيل سير العمل يدويًا من واجهة GitHub Actions
  workflow_dispatch:

# تحديد المهام (jobs) التي سيتم تنفيذها
jobs:
  build_apk:
    # تحديد نظام التشغيل الذي ستعمل عليه المهمة
    runs-on: ubuntu-latest

    # خطوات تنفيذ المهمة
    steps:
      # الخطوة 1: سحب (checkout) كود المستودع
      - name: Checkout Repository
        uses: actions/checkout@v4

      # الخطوة 2: إعداد بيئة Flutter
      # يستخدم هذا الإجراء (action) لتثبيت Flutter وإعداد البيئة
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          # *** التغيير هنا: تحديد إصدار Flutter متوافق ***
          # إصدار Flutter 3.19.6 يأتي مع Dart SDK 3.0.7، وهو ضمن النطاق المطلوب (<3.7.0)
          flutter-version: '3.19.6' 

      # الخطوة 3: جلب تبعيات Flutter
      - name: Get Flutter Dependencies
        run: flutter pub get

      # الخطوة 4: بناء ملف APK
      # يستخدم الأمر 'flutter build apk --release' لإنشاء نسخة الإصدار من التطبيق
      - name: Build Flutter APK
        run: flutter build apk --release

      # الخطوة 5: رفع ملف APK كـ 'artifact' (مخرجات سير العمل)
      # هذا يسمح لك بتنزيل ملف APK من صفحة GitHub Actions بعد اكتمال البناء
      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release-apk
          path: build/app/outputs/flutter-apk/app-release.apk
          # يمكنك تحديد مسار مختلف إذا كنت تبني App Bundle (AAB)
          # path: build/app/outputs/bundle/release/app-release.aab

